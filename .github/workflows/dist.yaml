name: Build Packages

on: [push]

jobs:
  wheels-macos:
    runs-on: macos-10.15
    strategy:
      matrix:
        python:
          - download_url: 'https://www.python.org/ftp/python/3.7.6/python-3.7.6-macosx10.6.pkg'
            sha384: '7b794a55c1e5eaf8a07a118d70b90f5743cccdb1c795574c2e9efc4b6239e943c1da41afae884712dbfaa3a48acfa9f5'
            python: '/Library/Frameworks/Python.framework/Versions/3.7/bin/python3'
            archflags: '-arch i386 -arch x86_64'
            sdkroot: ''
          - download_url: 'https://www.python.org/ftp/python/3.9.1/python-3.9.1-macos11.0.pkg'
            sha384: '74c3345604768466e18f75744b68854aab5694f87cd85e8f9a326275cae43bfed181264f09734faa1e745d9264241019'
            python: '/Library/Frameworks/Python.framework/Versions/3.9/bin/python3'
            archflags: '-arch arm64 -arch x86_64'
            sdkroot: '/Library/Developer/CommandLineTools/SDKs/MacOSX11.1.sdk/'

    steps:
      - uses: actions/checkout@master
      - run: |
          curl "${{ matrix.python.download_url }}" -o python.pkg
          [[ `openssl sha384 -hex python.pkg | egrep -o '[0-9a-f]{96}'` = "${{ matrix.python.sha384 }}" ]] || exit 1
          sudo installer -pkg python.pkg -target /
      - name: Install dependencies
        run: |
          ${{ matrix.python.python }} -m pip install --user -U pip wheel
          ${{ matrix.python.python }} -m pip install --user -r requirements.txt
      - name: Build abi3 wheel (64-bit)
        run: |
          if [ -n "${{ matrix.python.sdkroot }}" ]; then
            export SDKROOT="${{ matrix.python.sdkroot }}"
          fi
          export ARCHFLAGS="${{ matrix.python.archflags }}"
          ${{ matrix.python.python }} setup.py bdist_wheel --py-limited-api cp35
      - run: lipo -info build/*/*/*.so
      - name: Upload
        uses: actions/upload-artifact@v2
        with:
          path: dist/*

  wheels-windows:
    runs-on: windows-2019

    strategy:
      matrix:
        python-version: [3.6]

    steps:
      - uses: actions/checkout@v2
      - name: Set up Python ${{ matrix.python-version }} (64-bit)
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
          architecture: 'x64'
      - name: Install dependencies (x64)
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
      - name: Build abi3 wheel (64-bit)
        run: |
          python setup.py bdist_wheel --py-limited-api cp35
      - name: Set up Python ${{ matrix.python-version }} (32-bit)
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
          architecture: 'x86'
      - name: Install dependencies (x86)
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
      - name: Build abi3 wheel (32-bit)
        run: |
          python setup.py bdist_wheel --py-limited-api cp35
      - name: Upload
        uses: actions/upload-artifact@v2
        with:
          path: dist/*

  sdist-and-pure-wheel:
    runs-on: ubuntu-20.04

    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: '3.x'
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
      - name: sdist
        run: python setup.py sdist --formats gztar
      - name: bdist_wheel
        run: python setup.py bdist_wheel --exclude-extension --universal
      - name: "Rename wheel"
        shell: pwsh
        run: |
          $version = (python setup.py --fullname)
          $version = $version.Split("-", $version.Split("-").Length-1) -join "_"
          $shortTags = "py2","pp35","pp36","pp37","pp38","pp39"
          $tagPyPyAnd2 = "$($shortTags -join '.')-none-any"
          $allTags = ($shortTags |% {"$_-none-any"}) -join ","
          $tagUniversal = "py2.py3-none-any"

          python .github/_replace_tags_in_wheel.py ./dist/$version-$tagUniversal.whl ./dist/$version-$tagPyPyAnd2.whl $allTags

          Remove-Item ./dist/$version-$tagUniversal.whl
      - name: Upload
        uses: actions/upload-artifact@v2
        with:
          path: dist/*

  wheels-for-manylinux:
    runs-on: ubuntu-20.04

    strategy:
      matrix:
        image:
          - manylinux1_i686
          - manylinux1_x86_64
          - manylinux2014_s390x
          - manylinux2014_ppc64le
          - manylinux2014_aarch64

    steps:
    - uses: actions/checkout@v2
    - name: Setup qemu-user-static for docker
      run: |
        docker pull multiarch/qemu-user-static
        docker run --rm --privileged multiarch/qemu-user-static --reset -p yes
    - name: Build abi3 wheel
      run: |
        P=${{ matrix.image }}
        if [ "${P: -4}" = i686 ]; then
          PRE="linux32"
        else
          PRE=""
        fi
        docker pull quay.io/pypa/$P
        docker run --rm -e PLAT=$P -v $(pwd):/io quay.io/pypa/$P $PRE sh -c "
          cd /io
          /opt/python/cp36-cp36m/bin/pip install -r requirements.txt
          /opt/python/cp36-cp36m/bin/python3 setup.py bdist_wheel --py-limited-api cp35
          auditwheel repair dist/*.whl
          rm dist/*.whl
        "
    - name: Upload
      uses: actions/upload-artifact@v2
      with:
        path: wheelhouse/*.whl